when reassigning objects wrap them in () as {} will be treated as code block and {a,b} = will not work as assignment to code block is not possible. 

spread operator:Spread operator will be used on right side of =.
rest operator:Rest operator will be used on left side of =.

nullish operator: ?? use it instead of || (it will only check nullish values i.e null and undefined).

.entries():returns an array of arrays with index and value
for of : use it for array. we can use break and continue in for of loop.

enhanced oject literals: use only name in object will create a property name and vlaue of that name. Use [] to use computed object keys.

optional chaning(?.): will reuturn undefined or null immedialy if not defined.

arrays vs sets: Use array when:
                                we need ordered list of values.
                                when to manipulate data.
                Use sets when:
                                Need to work with unique values.
                                When high performance is needed.
                                To remove duplicates from array.

objects vs maps: Use object when:
                                More traditional key value stored(abused objects).
                                Easier to write and access with . and [].
                                when need to include functions(methods).
                                when working with JSON.

                use Maps when:
                                Want better performance.
                                key can have any data type.
                                Easy to iterate.
                                Easy to compute size.
                                When you simply need to map key to values.
                                When you need keys that are not strings. 

Primitive data types does not have methods.
but for string when method is called javascript string to string object like new String();